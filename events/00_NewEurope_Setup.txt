#setup stuff triggered by on_startup
add_namespace = ne_setup


news_event = {
	id = ne_setup.1
	
	hidden = yes
	is_triggered_only = yes
	fire_only_once = yes
	
	
	immediate = {

			
		##Stuff for game		
		GER = {set_capital = 768 }
		KAZ = {set_capital = 589 }

		##WGR and GDR is already in the country files
		WGR = {
			set_capital = 51 
			set_research_slots = 3
		}

		DDR = {
			set_capital = 763 
			set_research_slots = 3
		}
		
		##Danzig puppet	
		POL = {		
			if = {			
				limit = {
					has_dlc = "Together for Victory"
				}
				
				set_autonomy = {
					target = DAN
					autonomous_state = autonomy_integrated_puppet
				}

			}
			
			puppet = DAN								
		}
		
		ALG = {
		
			set_cosmetic_tag = MAL_UK
		}
		
		##Soviet puppets
		SOV	= {
		
			if = {			
				limit = {
					has_dlc = "Together for Victory"
				}
				
				set_autonomy = {
					target = TAN
					autonomous_state = autonomy_satellite_sov
				}
				
				set_autonomy = {
					target = MON
					autonomous_state = autonomy_satellite_sov
				}
			}
		
			puppet = TAN
			puppet = MON
			
		}
		
		##American puppet Liberia, Philippines
		USA = {	

			if = {			
				limit = {
					has_dlc = "Together for Victory"
				}
				
				set_autonomy = {
					target = LIB
					autonomous_state = autonomy_colony
				}
				
				set_autonomy = {
					target = PHI
					autonomous_state = autonomy_dominion
				}
			}
			
			puppet = LIB
			puppet = PHI
			
		}
		
		##French puppets (Tunisia, Syria, Lebanon, Morocco)
		FRA = {	

			if = {			
				limit = {
					has_dlc = "Together for Victory"
				}
				
				set_autonomy = {
					target = TUN
					autonomous_state = autonomy_colony
				}
				
				set_autonomy = {
					target = MOR
					autonomous_state = autonomy_colony
				}
				
				set_autonomy = {
					target = LEB
					autonomous_state = autonomy_dominion
				}
				
				set_autonomy = {
					target = SYR
					autonomous_state = autonomy_dominion
				}
			}
			
			puppet = TUN
			puppet = MOR
			puppet = LEB
			puppet = SYR
			
		}
		
		##British puppets: OMA, NEP, BHU				
		ENG = {		
			if = {			
				limit = {
					has_dlc = "Together for Victory"
				}
				
				set_autonomy = {
					target = EGY
					autonomous_state = autonomy_dominion
				}
				
				set_autonomy = {
					target = OMA
					autonomous_state = autonomy_dominion
				}
				
				set_autonomy = {
					target = NEP
					autonomous_state = autonomy_puppet
				}
				
				set_autonomy = {
					target = BHU
					autonomous_state = autonomy_dominion
				}
			}
		
			puppet = EGY
			puppet = YEM
			puppet = OMA
			puppet = NEP
			puppet = BHU
			
			add_to_faction = IRQ
			
			if = {
				limit = { has_dlc = "Together for Victory" }

				EGY = { add_to_tech_sharing_group = commonwealth_research }
				OMA = { add_to_tech_sharing_group = commonwealth_research }
				NEP = { add_to_tech_sharing_group = commonwealth_research }
				BHU = { add_to_tech_sharing_group = commonwealth_research }
				IRQ = { add_to_tech_sharing_group = commonwealth_research }
				
			}
			
		}
		
		##Further changes for new puppets	
		EGY = {
			
			load_oob = EGY_1936		
		
			set_politics = { ruling_party = neutrality elections_allowed = no } 
			add_popularity = { ideology = neutrality popularity = 0.76 } 
		}
				
		YEM = {		
			set_politics = { ruling_party = neutrality elections_allowed = no } 
			add_popularity = { ideology = neutrality popularity = 0.85 } 
		}
		
		OMA = {		
			set_politics = { ruling_party = neutrality elections_allowed = no } 
			add_popularity = { ideology = neutrality popularity = 0.85 } 
		}
		
		NEP = {		
			set_politics = { ruling_party = neutrality elections_allowed = no } 
			add_popularity = { ideology = neutrality popularity = 0.90 } 
		}
		
		BHU = {		
			set_politics = { ruling_party = neutrality elections_allowed = no } 
			add_popularity = { ideology = neutrality popularity = 0.90 } 
		}
		
		SYR = {		
		
			set_cosmetic_tag = NE_SYR_FRA ##Syrian Republic
		
			set_politics = { ruling_party = neutrality elections_allowed = no } 
			add_popularity = { ideology = neutrality popularity = 0.90 } 
		}
		
		LEB = {		
		
			set_cosmetic_tag = NE_LEB_FRA
			
			set_politics = { ruling_party = neutrality elections_allowed = no } 
			add_popularity = { ideology = neutrality popularity = 0.90 } 
		}
			
		
		##Adding state cores
		CAN = {		
			
			add_state_claim = 331
			add_state_claim = 332
			
		}
		
		EGY = {					
			add_state_claim = 795		
		}
		
		GRE = {					
			add_state_core = 183
			add_state_core = 795
		}
		
		TUR = {					
			add_state_core = 183
			add_state_core = 795			
		}
		

	}
	
	
	option = {
		#
	}
}


##Exit europe manager menu; adding cores
country_event = {
	id = ne_setup.2

	is_triggered_only = yes	
	hidden = yes

	
	immediate = {
	
		##set capitals:	
		if = {
			limit = {
				country_exists = WGR
				51 = { is_owned_by = WGR }
			}
					
			WGR = { set_capital = 51 }			
				
		}
		
		if = {
			limit = {
				country_exists = DDR
				763 = { is_owned_by = DDR }
			}
					
			DDR = { set_capital = 763 }			
				
		}
		
		##ADDING CORES, occupation zones don't get cores
		if = {
			limit = {
				country_exists = WGR
			}
			
			every_state = {
				limit = {
					OR = {
						is_owned_by = WGR
						is_owned_by = DDR
						is_owned_by = SAA
					}					
				}
			add_core_of = WGR			
			}
		
		}
		
		if = {
			limit = {
				country_exists = DDR
			}
			
			every_state = {
				limit = {
					OR = {
						is_owned_by = WGR
						is_owned_by = DDR
						is_owned_by = SAA
					}
					
				}
			add_core_of = DDR			
			}
		
		}

		if = {
			limit = {
				country_exists = SAA
			}
			
			every_state = {
				limit = {
					OR = {
						#is_owned_by = WGR	#####In case of
						#is_owned_by = DDR  #####Saarland World Conquest
						is_owned_by = SAA	
					}
				}
			add_core_of = SAA			
			}
		
		}
		
		##Morgenthau cores
		
		if = {
			limit = {
				OR = {
					country_exists = SGR
					country_exists = NGR
					country_exists = INT
				}
				
			}
			
			every_state = {
				limit = {
					OR = {
						is_owned_by = SGR
						is_owned_by = NGR
						is_owned_by = INT
					}
					
				}
			add_core_of = SGR
			add_core_of = NGR
			}
		
		}
		
		##Roosevelt cores		
		if = {
			limit = {
				OR = {
					country_exists = BAV
					country_exists = PRS
					country_exists = INT
					country_exists = HAN
					country_exists = SAX
					country_exists = HES
					
				}
				
			}
			
			every_state = {
				limit = {
					OR = {
						is_owned_by = BAV
						is_owned_by = PRS
						is_owned_by = INT
						is_owned_by = HAN
						is_owned_by = SAX
						is_owned_by = HES
					}
					
				}
			add_core_of = BAV
			add_core_of = PRS
			add_core_of = HAN
			add_core_of = SAX
			add_core_of = HES
			
			}
		
		}

		##guarantee INT = Internationl Zone		
		if = {
			limit = {
				country_exists = INT
			}
		
			every_country = {
				limit = {
					is_major = yes
					NOT = { tag = INT }
					NOT = { has_government = fascism }
					
				}
			
			give_guarantee = INT 			
			}
		}

	
		##remove unnneccessary cores	
		if = {
			limit = {
				NOT = { country_exists = WGR }					
			}
				
			every_state = {
				limit = {
					is_core_of = DDR				
				}
			remove_core_of = DDR		
			}
			
		}

		if = {
			limit = {
				NOT = { country_exists = WGR }					
			}
				
			every_state = {
				limit = {
					is_core_of = WGR				
				}
			remove_core_of = WGR		
			}
			
		}
		
		if = {
			limit = {
				NOT = { country_exists = SAA }					
			}
				
			every_state = {
				limit = {
					is_core_of = SAA				
				}
			remove_core_of = SAA		
			}
			
		}
		
		if = {
			limit = {
				NOT = { country_exists = SGR }					
			}
				
			every_state = {
				limit = {
					is_core_of = SGR				
				}
			remove_core_of = SGR		
			}
			
		}
		
		if = {
			limit = {
				NOT = { country_exists = NGR }					
			}
				
			every_state = {
				limit = {
					is_core_of = NGR				
				}
			remove_core_of = NGR		
			}
			
		}
		
		
		##roosevelt cores	
		if = {
			limit = {
				NOT = { country_exists = HES }					
			}
				
			every_state = {
				limit = {
					is_core_of = HES				
				}
			remove_core_of = HES		
			}
			
		}

		if = {
		limit = {
			NOT = { country_exists = BAV }					
		}
			
		every_state = {
			limit = {
				is_core_of = BAV				
			}
		remove_core_of = BAV		
		}
		
		}

		if = {
			limit = {
				NOT = { country_exists = SAX }					
			}
				
				every_state = {
					limit = {
						is_core_of = SAX				
					}
				remove_core_of = SAX		
				}
		
		}
		
		
		if = {
			limit = {
				NOT = { country_exists = HAN }					
			}
			
				every_state = {
					limit = {
						is_core_of = HAN				
					}
				remove_core_of = HAN		
				}
		
		}
		
		if = {
			limit = {
				NOT = { country_exists = PRS }					
			}
				
			every_state = {
				limit = {
					is_core_of = PRS				
				}
			remove_core_of = PRS		
			}		
		}
		
		
		##setting the flags		
		if = {
			limit = {
				country_exists = DDR
				country_exists = WGR
				NOT = { country_exists = GER }
				
			}
				
			set_global_flag = germany_divided	
		}
		
		if = {
			limit = {
				NOT = { country_exists = DDR }
				NOT = { country_exists = WGR }			
			}
				
			clr_global_flag = germany_divided	
		}
		
		if = {
			limit = {
				NOT = { country_exists = DDR }
				NOT = { country_exists = WGR }
				NOT = { country_exists = GER }
				
				OR = {
					country_exists = FOZ
					country_exists = AOZ
					country_exists = BOZ
					country_exists = SOZ
				}	
			}
				
			set_global_flag = germany_partitioned	
		}
		
		if = {
			limit = {
			
				NOT = {
					
					OR = {
						country_exists = FOZ
						country_exists = AOZ
						country_exists = BOZ
						country_exists = SOZ
					}

				}
			
			}
				
			clr_global_flag = germany_partitioned	
		}
		
		##morgenthau		
		if = {
			limit = {
				NOT = { country_exists = DDR }
				NOT = { country_exists = WGR }
				NOT = { country_exists = GER }
				
				country_exists = NGR
				country_exists = SGR
				country_exists = INT					
			}
				
			set_global_flag = germany_morgenthau	
		}
		
		if = {
			limit = {
				
				NOT = { country_exists = NGR }
				NOT = { country_exists = SGR }
				NOT = { country_exists = INT }
					
			}
				
			clr_global_flag = germany_morgenthau	
		}
		
		
		##roosevelt		
		if = {
			limit = {
				NOT = { country_exists = DDR }
				NOT = { country_exists = WGR }
				NOT = { country_exists = GER }
				
				country_exists = BAV
				country_exists = HES
				country_exists = INT
				country_exists = HAN
				country_exists = PRS
				country_exists = SAX
					
			}
				
			set_global_flag = germany_roosevelt	
		}
		
		if = {
			limit = {				
				NOT = { country_exists = BAV }
				NOT = { country_exists = HES }
				NOT = { country_exists = INT }
				NOT = { country_exists = HAN }
				NOT = { country_exists = PRS }
				NOT = { country_exists = SAX }				
			}
				
			clr_global_flag = germany_roosevelt	
		}
		
		##austria exists	
		if = {
			limit = {				
				country_exists = AUS
				AUS = { is_subject = no }
			}
			
			
			set_global_flag = austria_independent
			
			if = {
				limit = {
					has_global_flag = austria_partitioned
				}
				clr_global_flag = austria_partitioned
			}
			
		}
		
		##Austria doesn't exist
		if = {
			limit = {
			
				NOT = { country_exists = AUS }
				NOT = { country_exists = GER }	
				
				FRA = { 		
					owns_state = 153				
				}
				
				USA = { 		
					owns_state = 152					
				}
				
				SOV = { 		
					owns_state = 4
					owns_state = 776							
				}
				
				ENG = { 	
					owns_state = 777				
				}	
			}
				
			set_global_flag = austria_partitioned
			
			if = {
				limit = {
					has_global_flag = austria_independent
				}
				clr_global_flag = austria_independent
			}
		}
		
		
	}


	option = {
		#Ignore me, I'm just a placeholder!
	}
		
            	
}


##Exit asia manager menu; adding cores
country_event = {
	id = ne_setup.3

	is_triggered_only = yes	
	hidden = yes

	
	immediate = {
	
		##SRJ
		if = {
			limit = {
				country_exists = SRJ
			}
			
			every_state = {
				limit = {
					OR = {
						is_owned_by = SRJ
						is_owned_by = JAP
					}
					
				}
			add_core_of = SRJ			
			}
		}
		
		##Generic Japan
		if = {
			limit = {
				country_exists = JAP
			}
			
			every_state = {
				limit = {
					OR = {
						is_owned_by = SRJ
						is_owned_by = JAP
					}
					
				}
			add_core_of = JAP			
			}		
		}
	}
	
	
	option = {
		#Ignore me, I'm just a placeholder!
	}
	
	
}




